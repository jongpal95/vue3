### 프로젝트 구조 [https://www.gymcoding.co/0a2d35ba-b925-4c26-b425-7e53bba218f7/]
├── node_modules
│		└── ...
├── public
│   └── favicon.ico
├── src
│   ├── App.vue
│   ├── assets
│   │   ├── base.css
│   │   └── logo.svg
│   ├── components
│   │   ├── HelloWorld.vue
│   │   ├── TheWelcome.vue
│   │   ├── WelcomeItem.vue
│   │   └── icons
│   │       ├── IconCommunity.vue
│   │       ├── IconDocumentation.vue
│   │       ├── IconEcosystem.vue
│   │       ├── IconSupport.vue
│   │       └── IconTooling.vue
│   └── main.js
├── index.html
├── package-lock.json
├── package.json
├── README.md
└── vite.config.js


## vite.config.js
: Vite 명령어 사용 시 해당 파일음 참고, 별칭으로 경로 설정 가능

## package.json
: npm으로 관리하는 의존 모듈, 자주쓰는 명령어를 스크립트 선언

- node_modules : 의존된 모듈이 설치된 디렉토리
- public : 정적인 자산을 포함하고 있는 디렉토리
- ./src/assets : 웹팩이나 비트와 같은 빌드 도구의 영향을 받는 이미지나 css같은 정적 자산을 놓는 위치

## App.vue
: 루트 컴포넌트
    * 웹 애플리케이션 실행 -> index.html 렌더링 -> 스크립트 태그에 선언된 메인 모듈을 가져옴 
    -> createApp(Vue 인스턴스 생성, 루트 컴포넌트로 렌더링이 될 App.vue 컴포넌트) 메서드 실행
    -> 생성된 인스턴스를 파라미터의 위치에 마운트


### 스타일 가이드
: 코드 컨벤션(code convention) / 규칙을 네 가지 범주로 나눔(A,B,C,D)
    - A:Essential
    - B:Strongly Recommended
    - C:Recommended
    - D:Use with Caution
 > ESlint에서 옵션으로 적용 가능


### ESlint
### Prettier