### 반응형 기초 [https://www.gymcoding.co/cd0b4825-9bcb-4c00-9697-e480137c120e/]


## 반응형 상태 선언하기
: java script 객체에서 반응형 상태를 생성하기 위해 reactive() 함수를 사용
  reactive함수는 객체, 배열같은 참조 타입을 반응형 객체로 만들 수 있음

* OptionsAPI에서 반응형 객체 선언 : data()라는 옵션의 객체를 반환 / 내부적으로 반환된 객체는 reactive로 wrapping됨


## ref()
: reactive함수는 객체타입에만 동작함, 그래서 primitive 타입(number, string, boolean)을 반응형으로 만들고자할 때 ref메서드를 사용할 수 있음
  ref메서드는 변이가능한 객체를 반환. 이 객체 안에는 value라는 하나의 속성만 포함
  value값은 ref메서드에서 매개변수로 받은 값을 갖고있으며, 이 객체는 내부의 value값에 대한 반응형 참조 역할을 함
  템플릿 포현식에서 반환 객체를 사용할 때 내부적으로 자동으로 Unwrapping이 되므로 이중 괄호 내 변수명만 입력하면 됨  

* ref로 선언한 데이터를 반응형 객체의 속성으로 주입하게 되면 자동으로 .value가 Unwrapping되어 일반 속성으로 사용할 수 있음


## 반응형 상태 구조 분해 할당
: 큰 반응형 객체의 몇몇 속성을 사용하길 원할 때, 원하는 속성을 얻기 위해 es6구조분해할당을 사용하는 것은 매우 일반적
  그러나 구조 분해로 속성은 반응형을 잃게됨, 이러한 경우 반응형 객체를 일련의 ref들로 변환 해야함


## readonly를 이용하여 반응형 객체의 변경 방지
: 반응형 객체의 변경을 감지할 수 있음 / 주입된 반응형 객체(Provide/Inject)를 갖고 있을 때, 해당 객체가 변이되는 걸 막고자 한다면 읽기 전용 프록시를 생성
  readonly로 생성된 객체는 변이하려고 하면 경고와 함께 실패함


## Reactivity Transform 실험적인 단계
: refs와 함께 .value를 사용해야 하는 것은 js언어제약으로 인한 단점임.
  그러나 complie-time transforms을 사용하면 적절한 위치에 자동으로 추가하여 개선 가능